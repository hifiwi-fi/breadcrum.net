name: flyctl deploy

on:
  workflow_dispatch:
    inputs:
      deploy-web:
        type: boolean
        description: 'Deploy web service'
        default: true
      deploy-worker:
        type: boolean
        description: 'Deploy worker service'
        default: true

env:
  FORCE_COLOR: 1
  NPM_CONFIG_COLOR: always
  DATABASE_URL: postgres://postgres:postgres@localhost:5432/breadcrum

concurrency:
  group: flyctl-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: breadcrum
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v5
    - name: Use Node.js
      uses: actions/setup-node@v5
      with:
        node-version-file: package.json
        registry-url: 'https://registry.npmjs.org'

    - uses: superfly/flyctl-actions/setup-flyctl@master
    - run: npm i
    - name: Archive lockfile
      uses: actions/upload-artifact@v4
      with:
        name: package-lock.json
        path: package-lock.json
    - run: npm run generate-default-env --workspaces --if-present
    - run: npm run migrate --workspaces --if-present
      env:
        PGDATABASE: breadcrum
        PGHOST: localhost
        PGPASSWORD: postgres
        PGPORT: 5432
        PGUSER: postgres
    - run: npm test
    - name: Deploy web
      run: npm run deploy:web
      if: ${{ github.event.inputs.deploy-web == 'true' }}
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
    - name: Deploy worker
      run: npm run deploy:worker
      if: ${{ github.event.inputs.deploy-worker == 'true' }}
      env:
        FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
