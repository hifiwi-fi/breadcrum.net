#!/usr/bin/env bash

set -e

# Get the current branch name
TARGET_BRANCH=$(git branch --show-current)
BRANCH_NAME="regenerate-lockfile-${GITHUB_RUN_NUMBER:-$(date +%s)}"

echo "üéØ Target branch: $TARGET_BRANCH"

# Configure git
git config user.name "github-actions[bot]"
git config user.email "github-actions[bot]@users.noreply.github.com"

# Delete existing package-lock.json
echo "üóëÔ∏è  Deleting existing package-lock.json..."
rm -f package-lock.json

# Run npm install to generate new lockfile
echo "üì¶ Running npm install..."
npm install

# Check if there are changes
if git diff --exit-code package-lock.json > /dev/null 2>&1; then
  echo "‚úÖ No changes detected in package-lock.json"
  exit 0
fi

echo "üìù Changes detected in package-lock.json"

# Create a new branch
echo "üåø Creating branch: $BRANCH_NAME"
git checkout -b "$BRANCH_NAME"

# Stage changes
git add package-lock.json

# Generate commit message with Copilot if available
COMMIT_MESSAGE="chore: regenerate package-lock.json"
if command -v gh &> /dev/null && gh extension list | grep -q copilot; then
  echo "ü§ñ Generating commit message with GitHub Copilot..."

  # Get the diff stats
  DIFF_STAT=$(git diff --staged --stat package-lock.json)

  # Create prompt for Copilot
  PROMPT="Write a concise git commit message for the following changes to package-lock.json. Use conventional commit format. The file was regenerated by deleting and running npm install.

Changes:
${DIFF_STAT}

Respond with ONLY the commit message, nothing else."

  # Try to get suggestion from Copilot (suppress errors if it fails)
  SUGGESTED_MESSAGE=$(gh copilot suggest -t shell "git commit -m '${PROMPT}'" 2>/dev/null | grep -o '".*"' | sed 's/"//g' || echo "")

  if [ -n "$SUGGESTED_MESSAGE" ]; then
    COMMIT_MESSAGE="$SUGGESTED_MESSAGE"
    echo "‚ú® Using Copilot-generated message: $COMMIT_MESSAGE"
  else
    echo "‚ÑπÔ∏è  Copilot suggestion failed, using default message"
  fi
else
  echo "‚ÑπÔ∏è  GitHub Copilot CLI not available, using default message"
fi

# Commit changes
echo "üíæ Committing changes..."
git commit -m "$COMMIT_MESSAGE"

# Push the branch
echo "‚¨ÜÔ∏è  Pushing branch to origin..."
git push origin "$BRANCH_NAME"

# Generate PR description with Copilot if available
PR_BODY="This PR was automatically generated by the regenerate-lockfile workflow.

The package-lock.json file has been regenerated by deleting the existing lockfile and running \`npm install\`.

Please review the changes before merging.

Triggered by: @${GITHUB_ACTOR:-unknown}
Run number: ${GITHUB_RUN_NUMBER:-N/A}
Base branch: $TARGET_BRANCH"

if command -v gh &> /dev/null && gh extension list | grep -q copilot; then
  echo "ü§ñ Generating PR description with GitHub Copilot..."

  # Get more detailed diff stats
  DIFF_DETAILS=$(git diff HEAD~1 package-lock.json --stat)

  # Create prompt for PR description
  PR_PROMPT="Write a clear and concise pull request description for regenerating package-lock.json. Explain what changed and why this is being done.

Changes:
${DIFF_DETAILS}

Context: The package-lock.json was deleted and regenerated by running npm install to ensure consistency.

Format the response as markdown. Include a summary and any notable changes."

  # Try to get PR description from Copilot
  SUGGESTED_PR_BODY=$(gh copilot suggest -t shell "echo '${PR_PROMPT}'" 2>/dev/null | tail -n +2 || echo "")

  if [ -n "$SUGGESTED_PR_BODY" ]; then
    PR_BODY="$SUGGESTED_PR_BODY

---

Triggered by: @${GITHUB_ACTOR:-unknown}
Run number: ${GITHUB_RUN_NUMBER:-N/A}
Base branch: $TARGET_BRANCH"
    echo "‚ú® Using Copilot-generated PR description"
  else
    echo "‚ÑπÔ∏è  Copilot PR description generation failed, using default"
  fi
else
  echo "‚ÑπÔ∏è  Using default PR description"
fi

# Create PR using GitHub CLI
echo "üîÄ Creating pull request..."
gh pr create \
  --base "$TARGET_BRANCH" \
  --head "$BRANCH_NAME" \
  --title "$COMMIT_MESSAGE" \
  --body "$PR_BODY"

echo "‚úÖ Pull request created successfully"
